setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(pscl)
library(haven)
library(dplyr)
library(lmtest)
library(DescTools)
library(nortest)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(pscl)
library(haven)
library(dplyr)
library(lmtest)
library(DescTools)
library(nortest)
df = read.csv("sample.csv", row.names = 1)
head(df)
str(df)
df = subset(df, select = -Patient_ID)
str(df)
attach(df)
df[] <- lapply(df, as.factor)
str(df)
df[] <- lapply(df, as.factor)
str(df)
#MODEL 1
mod1 = glm(MonkeyPox ~ Systemic.Illness+ Rectal.Pain+ Sore.Throat+ Penile.Oedema+ Oral.Lesions+ Solitary.Lesion+ Swollen.Tonsils+ HIV.Infection+ Sexually.Transmitted.Infection, family = binomial(link = 'logit'), data = df)
summary(mod1)
mod1
#MODEL 2
mod2 = glm(MonkeyPox ~ Systemic.Illness+ Sore.Throat+ Oral.Lesions+ Sexually.Transmitted.Infection, family = binomial(link = 'logit'), data = df)
summary(mod2)
mod2
#1. Uji Multiko
VIF(mod2)
pR2(mod1)
pR2
qchisq(0.95,160)
?pR2
pR2(mod1)
?qchisq
head(df)
df = read.csv("sample.csv", row.names = 1)
df
qchisq(0.95,391)
pR2(mod1)
#3. Uji kesesuaian model
library(ResourceSelection)
hoslem.test(df$result, fitted(mod1)) #Model telah sesuai dengan prediksi jika Pvalue < alfa
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(pscl)
library(haven)
library(dplyr)
library(lmtest)
library(DescTools)
library(nortest)
df = read.csv("sample.csv", row.names = 1)
df
head(df)
str(df)
df = subset(df, select = -Patient_ID)
str(df)
attach(df)
df[] <- lapply(df, as.factor)
str(df)
#MODEL 1
mod1 = glm(MonkeyPox ~ Systemic.Illness+ Rectal.Pain+ Sore.Throat+ Penile.Oedema+ Oral.Lesions+ Solitary.Lesion+ Swollen.Tonsils+ HIV.Infection+ Sexually.Transmitted.Infection, family = binomial(link = 'logit'), data = df)
summary(mod1)
mod1
#MODEL 2
mod2 = glm(MonkeyPox ~ Systemic.Illness+ Sore.Throat+ Oral.Lesions+ Sexually.Transmitted.Infection, family = binomial(link = 'logit'), data = df)
summary(mod2)
mod2
#1. Uji Multiko
VIF(mod2)
pR2(mod1)
qchisq(0.95,391)
#Rsquare
library(blorr)
blr_rsq_mcfadden_adj(mod1)
#3. Uji kesesuaian model
library(ResourceSelection)
hoslem.test(df$result, fitted(mod1)) #Model telah sesuai dengan prediksi jika Pvalue < alfa
hoslem.test(df$MonkeyPox, fitted(mod1)) #Model telah sesuai dengan prediksi jika Pvalue < alfa
#3. Uji kesesuaian model
library(ResourceSelection)
hoslem.test(df$MonkeyPox, fitted(mod1)) #Model telah sesuai dengan prediksi jika Pvalue < alfa
#3. Uji kesesuaian model
library(ResourceSelection)
hoslem.test(df$MonkeyPox, fitted(mod1)) #Model telah sesuai dengan prediksi jika Pvalue < alfa
hoslem.test(df$MonkeyPox, fitted(mod2)) #Model telah sesuai dengan prediksi jika Pvalue < alfa
hoslem.test(df$MonkeyPox, fitted(mod2)) #Model telah sesuai dengan prediksi jika Pvalue < alfa
df = read.csv("sample.csv", row.names = 1)
df
head(df)
str(df)
df = subset(df, select = -Patient_ID)
str(df)
attach(df)
df[] <- lapply(df, as.factor)
str(df)
#MODEL 1
mod1 = glm(MonkeyPox ~ Systemic.Illness+ Rectal.Pain+ Sore.Throat+ Penile.Oedema+ Oral.Lesions+ Solitary.Lesion+ Swollen.Tonsils+ HIV.Infection+ Sexually.Transmitted.Infection, family = binomial(link = 'logit'), data = df)
summary(mod1)
mod1
mod1
#MODEL 2
mod2 = glm(MonkeyPox ~ Systemic.Illness+ Sore.Throat+ Oral.Lesions+ Sexually.Transmitted.Infection, family = binomial(link = 'logit'), data = df)
summary(mod2)
mod2
mod2
hoslem.test(df$MonkeyPox,  fitted(mod2), g=10) #Model telah sesuai dengan prediksi jika Pvalue < alfa
hoslem.test(df$MonkeyPox, fitted(mod2)) #Model telah sesuai dengan prediksi jika Pvalue < alfa
#3. Uji kesesuaian model
library(ResourceSelection)
hoslem_test = hoslem.test(mod2$y, fitted(mod2), g=10) #Model telah sesuai dengan prediksi jika Pvalue < alfa
hoslem_test
#MODEL 2
mod2 = glm(MonkeyPox ~ Systemic.Illness+ Sore.Throat+ Oral.Lesions+ Sexually.Transmitted.Infection, family = binomial(link = 'logit'), data = df)
summary(mod2)
mod2
hoslem_test = hoslem.test(mod2$y, fitted(mod2), g=10) #Model telah sesuai dengan prediksi jika Pvalue < alfa
hoslem_test
hoslem_test = hoslem.test(mod2$y, fitted(mod2)) #Model telah sesuai dengan prediksi jika Pvalue < alfa
hoslem_test
#Uji kesesuaian model Awal
hoslem_test = hoslem.test(mod2$y, fitted(mod1)) #Model telah sesuai dengan prediksi jika Pvalue < alfa
hoslem_test
summary(mod1)
summary(mod1)
mod_null <- glm(MonkeyPox ~ 1, family = binomial(link = 'logit'), data = df)
mod_alt <- glm(MonkeyPox ~ Systemic.Illness + Sore.Throat + Oral.Lesions + Sexually.Transmitted.Infection,
family = binomial(link = 'logit'), data = df)
lrt_result <- anova(mod_null, mod_alt, test = "LRT")
print(lrt_result)
# Model Null (H₀): Model yang lebih sederhana
mod_null <- glm(MonkeyPox ~ 1, family = binomial(link = 'logit'), data = df)
# Model Alternatif (H₁): Model dengan prediktor yang lebih banyak
mod_alt <- glm(MonkeyPox ~ Systemic.Illness + Sore.Throat + Oral.Lesions + Sexually.Transmitted.Infection,
family = binomial(link = 'logit'), data = df)
# Statistik Likelihood Ratio (G) dihitung dengan perbedaan log-likelihood antara model null dan alternatif
G_statistic <- -2 * (logLik(mod_null) - logLik(mod_alt))
# Menentukan derajat kebebasan (v) = jumlah parameter yang diuji, dalam hal ini perbedaan jumlah parameter antara model null dan alternatif
v <- length(coef(mod_alt)) - length(coef(mod_null))
# Nilai kritis chi-square dengan derajat kebebasan v dan tingkat signifikansi 0.05
chi_square_critical <- qchisq(0.95, df = v)
# Menampilkan hasil
cat("Statistik G:", G_statistic, "\n")
cat("Nilai kritis chi-square:", chi_square_critical, "\n")
# Keputusan uji
if (G_statistic > chi_square_critical) {
cat("Tolak H₀: Model alternatif lebih baik.\n")
} else {
cat("Gagal menolak H₀: Model null lebih baik.\n")
}
# Model Null (H₀): Model yang lebih sederhana
mod_null <- glm(MonkeyPox ~ 1, family = binomial(link = 'logit'), data = df)
# Model Alternatif (H₁): Model dengan prediktor yang lebih banyak
mod_alt <- glm(MonkeyPox ~ Systemic.Illness + Sore.Throat + Oral.Lesions + Sexually.Transmitted.Infection,
family = binomial(link = 'logit'), data = df)
# Statistik Likelihood Ratio (G) dihitung dengan perbedaan log-likelihood antara model null dan alternatif
G_statistic <- -2 * (logLik(mod_null) - logLik(mod_alt))
# Menentukan derajat kebebasan (v) = jumlah parameter yang diuji, dalam hal ini perbedaan jumlah parameter antara model null dan alternatif
v <- length(coef(mod_alt)) - length(coef(mod_null))
# Nilai kritis chi-square dengan derajat kebebasan v dan tingkat signifikansi 0.05
chi_square_critical <- qchisq(0.95, df = v)
# Menampilkan hasil
cat("Statistik G:", G_statistic, "\n")
cat("Nilai kritis chi-square:", chi_square_critical, "\n")
pR2(mod1)
qchisq(0.95,391)
qchisq(0.95,391)
qchisq(0.95,391)
mod_null <- glm(MonkeyPox ~ 1, family = binomial(link = 'logit'), data = df)
mod_alt <- glm(MonkeyPox ~ Systemic.Illness + Sore.Throat + Oral.Lesions + Sexually.Transmitted.Infection,
family = binomial(link = 'logit'), data = df)
logLik_null <- logLik(mod_null)
logLik_alt <- logLik(mod_alt)
minus2_logLik_null <- -2 * logLik_null
minus2_logLik_alt <- -2 * logLik_alt
G_statistic <- minus2_logLik_null - minus2_logLik_alt
v <- length(coef(mod_alt)) - length(coef(mod_null))
chi_square_critical <- qchisq(0.95, df = v)
# Menampilkan hasil
cat("Statistik G (Likelihood Ratio):", G_statistic, "\n")
cat("Nilai kritis chi-square:", chi_square_critical, "\n")
# Keputusan uji
if (G_statistic > chi_square_critical) {
cat("Tolak H₀: Model alternatif lebih baik.\n")
} else {
cat("Gagal menolak H₀: Model null lebih baik.\n")
}
pR2(mod1)
#########MODEL TERBAIK
#MODEL 2
mod2 = glm(MonkeyPox ~ Systemic.Illness+ Sore.Throat+ Oral.Lesions+ Sexually.Transmitted.Infection, family = binomial(link = 'logit'), data = df)
summary(mod2)
mod2
mod2
#####Uji Simultan (Likelihood Rasio)
mod_null <- glm(MonkeyPox ~ 1, family = binomial(link = 'logit'), data = df)
mod_alt <- glm(MonkeyPox ~ Systemic.Illness+ Rectal.Pain+ Sore.Throat+ Penile.Oedema+ Oral.Lesions+ Solitary.Lesion+ Swollen.Tonsils+ HIV.Infection+ Sexually.Transmitted.Infection,
family = binomial(link = 'logit'), data = df)
logLik_null <- logLik(mod_null)
logLik_alt <- logLik(mod_alt)
minus2_logLik_null <- -2 * logLik_null
minus2_logLik_alt <- -2 * logLik_alt
G_statistic <- minus2_logLik_null - minus2_logLik_alt
v <- length(coef(mod_alt)) - length(coef(mod_null))
chi_square_critical <- qchisq(0.95, df = v)
# Menampilkan hasil
cat("Statistik G (Likelihood Ratio):", G_statistic, "\n")
cat("Nilai kritis chi-square:", chi_square_critical, "\n")
#Uji kesesuaian model Awal (Goodnest OF FIT)
hoslem_test = hoslem.test(mod2$y, fitted(mod1)) #Model telah sesuai dengan prediksi jika Pvalue < alfa
hoslem_test
#########MODEL TERBAIK
#MODEL 2
mod2 = glm(MonkeyPox ~ Systemic.Illness+ Sore.Throat+ Oral.Lesions+ Sexually.Transmitted.Infection, family = binomial(link = 'logit'), data = df)
summary(mod2)
mod2
#####Uji Simultan (Likelihood Rasio)
mod_null <- glm(MonkeyPox ~ 1, family = binomial(link = 'logit'), data = df)
mod_alt <- glm(MonkeyPox ~ Systemic.Illness + Sore.Throat + Oral.Lesions + Sexually.Transmitted.Infection,
family = binomial(link = 'logit'), data = df)
logLik_null <- logLik(mod_null)
logLik_alt <- logLik(mod_alt)
minus2_logLik_null <- -2 * logLik_null
minus2_logLik_alt <- -2 * logLik_alt
G_statistic <- minus2_logLik_null - minus2_logLik_alt
v <- length(coef(mod_alt)) - length(coef(mod_null))
chi_square_critical <- qchisq(0.95, df = v)
# Menampilkan hasil
cat("Statistik G (Likelihood Ratio):", G_statistic, "\n")
cat("Nilai kritis chi-square:", chi_square_critical, "\n")
#Uji kesesuaian model Awal (Goodnest OF FIT)
hoslem_test = hoslem.test(mod1$MonkeyPox, fitted(mod1)) #Model telah sesuai dengan prediksi jika Pvalue < alfa
#Uji kesesuaian model Awal (Goodnest OF FIT)
hoslem_test = hoslem.test(mod1$y, fitted(mod1)) #Model telah sesuai dengan prediksi jika Pvalue < alfa
hoslem_test
#########MODEL TERBAIK
#MODEL 2
mod2 = glm(MonkeyPox ~ Systemic.Illness+ Sore.Throat+ Oral.Lesions+ Sexually.Transmitted.Infection, family = binomial(link = 'logit'), data = df)
summary(mod2)
mod2
#####Uji Simultan (Likelihood Rasio)
mod_null <- glm(MonkeyPox ~ 1, family = binomial(link = 'logit'), data = df)
mod_alt <- glm(MonkeyPox ~ Systemic.Illness + Sore.Throat + Oral.Lesions + Sexually.Transmitted.Infection,
family = binomial(link = 'logit'), data = df)
logLik_null <- logLik(mod_null)
logLik_alt <- logLik(mod_alt)
minus2_logLik_null <- -2 * logLik_null
minus2_logLik_alt <- -2 * logLik_alt
G_statistic <- minus2_logLik_null - minus2_logLik_alt
v <- length(coef(mod_alt)) - length(coef(mod_null))
chi_square_critical <- qchisq(0.95, df = v)
# Menampilkan hasil
cat("Statistik G (Likelihood Ratio):", G_statistic, "\n")
cat("Nilai kritis chi-square:", chi_square_critical, "\n")
#Uji kesesuaian model Awal (Goodnest OF FIT)
hoslem_test = hoslem.test(mod2$y, fitted(mod2)) #Model telah sesuai dengan prediksi jika Pvalue < alfa
hoslem_test
#Uji kesesuaian model Awal (Goodnest OF FIT)
hoslem_test = hoslem.test(mod2$y, fitted(mod2)) #Model telah sesuai dengan prediksi jika Pvalue < alfa
hoslem_test
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(pscl)
library(haven)
library(dplyr)
library(lmtest)
library(DescTools)
library(nortest)
library(ResourceSelection)
df = read.csv("sample.csv", row.names = 1)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(pscl)
library(haven)
library(dplyr)
library(lmtest)
library(DescTools)
library(nortest)
library(ResourceSelection)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(pscl)
library(haven)
library(dplyr)
library(lmtest)
library(DescTools)
library(nortest)
library(ResourceSelection)
df = read.csv("sample.csv", row.names = 1)
df
head(df)
str(df)
df = subset(df, select = -Patient_ID)
str(df)
attach(df)
df[] <- lapply(df, as.factor)
str(df)
#MODEL 1
mod1 = glm(MonkeyPox ~ Systemic.Illness+ Rectal.Pain+ Sore.Throat+ Penile.Oedema+ Oral.Lesions+ Solitary.Lesion+ Swollen.Tonsils+ HIV.Infection+ Sexually.Transmitted.Infection,
family = binomial(link = 'logit'), data = df)
summary(mod1)
mod1
#MODEL 1
mod1 = glm(MonkeyPox ~ Systemic.Illness+ Rectal.Pain+ Sore.Throat+ Penile.Oedema+ Oral.Lesions+ Solitary.Lesion+ Swollen.Tonsils+ HIV.Infection+ Sexually.Transmitted.Infection,
family = binomial(link = 'logit'), data = df)
summary(mod1)
summary(mod1)
mod1
#MODEL 1
model_awal = glm(MonkeyPox ~ Systemic.Illness+ Rectal.Pain+ Sore.Throat+ Penile.Oedema+ Oral.Lesions+ Solitary.Lesion+ Swollen.Tonsils+ HIV.Infection+ Sexually.Transmitted.Infection,
family = binomial(link = 'logit'), data = df)
summary(model_awal)
model_awal
#####Uji Simultan (Likelihood Rasio)
mod_null <- glm(MonkeyPox ~ 1, family = binomial(link = 'logit'), data = df)
mod_alt <- glm(MonkeyPox ~ Systemic.Illness+ Rectal.Pain+ Sore.Throat+ Penile.Oedema+ Oral.Lesions+ Solitary.Lesion+ Swollen.Tonsils+ HIV.Infection+ Sexually.Transmitted.Infection,
family = binomial(link = 'logit'), data = df)
logLik_null <- logLik(mod_null)
logLik_alt <- logLik(mod_alt)
minus2_logLik_null <- -2 * logLik_null
minus2_logLik_alt <- -2 * logLik_alt
G_statistic <- minus2_logLik_null - minus2_logLik_alt
v <- length(coef(mod_alt)) - length(coef(mod_null))
chi_square_critical <- qchisq(0.95, df = v)
# Menampilkan hasil
cat("Statistik G (Likelihood Ratio):", G_statistic, "\n")
cat("Nilai kritis chi-square:", chi_square_critical, "\n")
# Menampilkan hasil
cat("G (Likelihood Ratio):", G_statistic, "\n")
cat("Nilai chi-square:", chi_square_critical, "\n")
cat("Nilai G (Likelihood Ratio):", G_statistic, "\n")
cat("Nilai chi-square:", chi_square_critical, "\n")
summary(model_awal)
summary(model_awal)
#Uji kesesuaian model Awal (Goodnest OF FIT)
hoslem_test = hoslem.test(model_awal$y, fitted(model_awal))
hoslem_test
#########MODEL TERBAIK
#MODEL 2
mod2 = glm(MonkeyPox ~ Systemic.Illness+ Sore.Throat+ Oral.Lesions+ Sexually.Transmitted.Infection, family = binomial(link = 'logit'), data = df)
mod2
mod2
#########MODEL TERBAIK
#MODEL 2
model_terbaik = glm(MonkeyPox ~ Systemic.Illness+ Sore.Throat+ Oral.Lesions+ Sexually.Transmitted.Infection, family = binomial(link = 'logit'), data = df)
summary(model_terbaik)
model_terbaik
model_terbaik
model_terbaik
summary(model_terbaik)
#####Uji Simultan (Likelihood Rasio)
mod_null <- glm(MonkeyPox ~ 1, family = binomial(link = 'logit'), data = df)
mod_alt <- glm(MonkeyPox ~ Systemic.Illness + Sore.Throat + Oral.Lesions + Sexually.Transmitted.Infection,
family = binomial(link = 'logit'), data = df)
logLik_null <- logLik(mod_null)
logLik_alt <- logLik(mod_alt)
minus2_logLik_null <- -2 * logLik_null
minus2_logLik_alt <- -2 * logLik_alt
G_statistic <- minus2_logLik_null - minus2_logLik_alt
v <- length(coef(mod_alt)) - length(coef(mod_null))
chi_square_critical <- qchisq(0.95, df = v)
#####Uji Simultan (Likelihood Rasio)
mod_null <- glm(MonkeyPox ~ 1, family = binomial(link = 'logit'), data = df)
mod_alt <- glm(MonkeyPox ~ Systemic.Illness + Sore.Throat + Oral.Lesions + Sexually.Transmitted.Infection,
family = binomial(link = 'logit'), data = df)
logLik_null <- logLik(mod_null)
logLik_alt <- logLik(mod_alt)
minus2_logLik_null <- -2 * logLik_null
minus2_logLik_alt <- -2 * logLik_alt
G_statistic <- minus2_logLik_null - minus2_logLik_alt
v <- length(coef(mod_alt)) - length(coef(mod_null))
chi_square_critical <- qchisq(0.95, df = v)
# Menampilkan hasil
cat("Nilai G (Likelihood Ratio):", G_statistic, "\n")
cat("Nilai chi-square:", chi_square_critical, "\n")
#Uji kesesuaian model Awal (Goodnest OF FIT)
hoslem_test = hoslem.test(model_terbaik$y, fitted(model_terbaik)) #Model telah sesuai dengan prediksi jika Pvalue < alfa
cat("Nilai G (Likelihood Ratio):", G_statistic, "\n")
cat("Nilai chi-square:", chi_square_critical, "\n")
cat("Nilai G (Likelihood Ratio):", G_statistic)
cat("Nilai chi-square:", chi_square_critical)
cat("Nilai G (Likelihood Ratio):", G_statistic)
cat("Nilai chi-square:", chi_square_critical)
cat("Nilai G (Likelihood Ratio):", G_statistic, "\n")
cat("Nilai chi-square:", chi_square_critical, "\n")
cat("Nilai G (Likelihood Ratio):", G_statistic, "\n")
cat("Nilai chi-square:", chi_square_critical, "\n")
cat("Nilai G (Likelihood Ratio):", G_statistic, "\n\n")
cat("Nilai chi-square:", chi_square_critical, "\n")
cat("Nilai G (Likelihood Ratio):", G_statistic, "\n\n")
cat("Nilai chi-square:", chi_square_critical, "\n")
hoslem_test = hoslem.test(model_terbaik$y, fitted(model_terbaik))
hoslem_test
hoslem_test = hoslem.test(model_terbaik$y, fitted(model_terbaik))
hoslem_test
